---
layout: post
title:  "【Testing】C++单元测试调研分析"
crawlertitle: "C++单元测试"
summary: "C++单元测试测试调研分析"
date:   2020-02-02 10:00:00 +0800
categories: posts
tags: '科研'
author: xusc
---

本文总结介绍了C++单元测试的相关工具。

### 测试框架
极限编程（XP）引发了软件开发方法从传统的瀑布模型转向以测试为驱动的敏捷开发模式的革命，在这场软件开发方法革命中，以xUnit系列的单元测试框架是一切的中心。

- [`CppUnit`](https://sourceforge.net/projects/cppunit/) 是xUnit家族中的一员，它是一个专门面向C++的单元测试框架。
- `[CppUTest](http://cpputest.github.io/)` 是一个基于C/C++的单元xUnit测试框架，用于单元测试和代码测试驱动。它是用C++编写的，但用于C和C++项目，并且经常在嵌入式系统中使用，但是它适用于任何C/C++项目。CppUTest的核心设计原则是：设计简单、使用简单；可移植性好；为测试驱动的开发人员构建测试驱动的开发。
- `[GoogleTest](https://github.com/google/googletest)` 是由测试技术团队根据Google的特定要求和约束开发的测试框架，是一个xUnit测试框架。无论是在Linux、Windows还是Mac上工作，只要编写C++代码，googletest都可以提供测试帮助。它支持任何类型的测试，而不仅仅是单元测试。
- `[CxxTest](http://cxxtest.com/)` 是C++的单元测试框架，其实质与JUnit，CppUnit和xUnit相似。CxxTest易于使用，因为它不需要预编译CxxTest测试库，它不使用C ++的高级功能（例如RTTI），并且支持非常灵活的测试发现形式。需要Python环境。
- `[Boost.Test](https://www.boost.org/)` 库提供了既易于使用又灵活的接口集，用于编写测试程序，组织测试到测试用例和测试套件，并且能控制它们的运行。一些Boost.Test接口对于产品（非测试）环境也可使用。依赖于Boost库。

### 覆盖工具
- `OpenCppCoverage` 是Windows下C++的开源代码覆盖工具。主要用途是用于单元测试，但是也可以使用它来了解程序中已执行的行以进行调试。主要用于Visual Studio。
- `gcov` 是一个测试覆盖程序，是gcc下的一个功能。lcov是gcov的可视化命令。
- `llvm-cov` 工具显示用于检测发出概要文件数据的程序的代码覆盖率信息。它可以用于gcov风格的覆盖范围或基于clang的基于检测的性能分析。llvm-cov gcov工具读取代码coverage数据文件，并显示指定源文件的coverage信息。它与GCC 4.2版中的gcov工具兼容，也可能与某些更高版本的gcov兼容。
- 商业工具：Coverage validator、BullseyeCoverage、Pure coverage

### 变异工具
- `Mull` 是用于变异测试的基于LLVM的工具，重点关注C和C ++语言。Mull在LLVM的bitcode级别上依靠调试信息显示结果，因此应该使用-fembed-bitcode指令并启用调试信息的情况下构建项目。但是Mull还未支持Windows系统。
- `mutate_cpp` 是C ++程序的突变测试环境。需要Python 3或通过操作系统的软件包管理器进行安装。电脑上需要已经安装git，CMake，make和一个C++编译器。
- `MuCPP` 是一个专门用于将变异测试应用到C++的系统。
- `MUSIC` : MUtation analySIs tool with High Configurability and Extensibility。MUSIC建立在Clang / LLVM之上。
- `Dextool` 是使用libclang编写插件的框架。主要重点是测试和静态分析工具。MART是基于LLVM编译器基础结构的多程序语言突变测试的框架。